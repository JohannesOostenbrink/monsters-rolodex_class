{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Johannes\\\\Desktop\\\\Front End Development\\\\monsters_rolodex\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    // constructor runs first - in anything and in any class\n    super(); // constructor here initializes the state \n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n  componentDidMount() {\n    // This run 3rd - Updates the state and then render re-renders\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState(() => {\n      return {\n        monsters: users\n      };\n    }));\n  }\n  render() {\n    // Renders run second. It mounts initial UI on to the DOM  \n\n    const filteredMonsters = this.state.monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(this.state.searchField);\n    });\n    onSearchChange = event => {\n      const searchField = event.target.value.toLocaleLowerCase();\n      this.setState(() => {\n        return {\n          searchField\n        };\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Monsters\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search-box\",\n          type: \"search\",\n          placeholder: \"search monsters\",\n          onChange: this.onSearchChange,\n          children: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), filteredMonsters.map(monster => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: monster.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, monster.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["logo","Component","App","constructor","state","monsters","searchField","componentDidMount","fetch","then","response","json","users","setState","render","filteredMonsters","filter","monster","name","toLocaleLowerCase","includes","onSearchChange","event","target","value","map","id"],"sources":["C:/Users/Johannes/Desktop/Front End Development/monsters_rolodex/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {Component} from 'react';\n\nclass App extends Component {\n  constructor(){ // constructor runs first - in anything and in any class\n    super();     // constructor here initializes the state \n\n    this.state={\n      monsters:[],\n      searchField: '',\n\n  };\n}\n\ncomponentDidMount() { // This run 3rd - Updates the state and then render re-renders\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then((response) => response.json())\n    .then((users) => this.setState(() =>\n   { return {monsters:users};\n}))\n}\n\n  render(){ // Renders run second. It mounts initial UI on to the DOM  \n    \n    const filteredMonsters = this.state.monsters.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(this.state.searchField);\n     });\n\n     onSearchChange = (event) => {\n      const searchField = event.target.value.toLocaleLowerCase();\n      this.setState(\n        () => {\n        return {searchField };\n      })\n    \n    }\n\n    return (\n      <div className=\"App\">\n        <div className = \"Monsters\">\n          <input className = 'search-box' type='search' placeholder='search monsters' \n          onChange={this.onSearchChange}>search</input>\n\n         {filteredMonsters.map(\n          (monster) => {\n            return (\n            <div key={monster.id}>\n              <h1>{monster.name}</h1>\n              </div>\n            )\n          }\n         )\n         \n         }\n        </div>\n       \n      </div>\n    )\n  }\n \n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAAQC,SAAS,QAAO,OAAO;AAAC;AAEhC,MAAMC,GAAG,SAASD,SAAS,CAAC;EAC1BE,WAAW,GAAE;IAAE;IACb,KAAK,EAAE,CAAC,CAAK;;IAEb,IAAI,CAACC,KAAK,GAAC;MACTC,QAAQ,EAAC,EAAE;MACXC,WAAW,EAAE;IAEjB,CAAC;EACH;EAEAC,iBAAiB,GAAG;IAAE;IACpBC,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAK,IAAI,CAACC,QAAQ,CAAC,MAChC;MAAE,OAAO;QAACR,QAAQ,EAACO;MAAK,CAAC;IAC5B,CAAC,CAAC,CAAC;EACH;EAEEE,MAAM,GAAE;IAAE;;IAER,MAAMC,gBAAgB,GAAG,IAAI,CAACX,KAAK,CAACC,QAAQ,CAACW,MAAM,CAAEC,OAAO,IAAK;MAC/D,OAAOA,OAAO,CAACC,IAAI,CAACC,iBAAiB,EAAE,CAACC,QAAQ,CAAC,IAAI,CAAChB,KAAK,CAACE,WAAW,CAAC;IACzE,CAAC,CAAC;IAEFe,cAAc,GAAIC,KAAK,IAAK;MAC3B,MAAMhB,WAAW,GAAGgB,KAAK,CAACC,MAAM,CAACC,KAAK,CAACL,iBAAiB,EAAE;MAC1D,IAAI,CAACN,QAAQ,CACX,MAAM;QACN,OAAO;UAACP;QAAY,CAAC;MACvB,CAAC,CAAC;IAEJ,CAAC;IAED,oBACE;MAAK,SAAS,EAAC,KAAK;MAAA,uBAClB;QAAK,SAAS,EAAG,UAAU;QAAA,wBACzB;UAAO,SAAS,EAAG,YAAY;UAAC,IAAI,EAAC,QAAQ;UAAC,WAAW,EAAC,iBAAiB;UAC3E,QAAQ,EAAE,IAAI,CAACe,cAAe;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe,EAE7CN,gBAAgB,CAACU,GAAG,CACnBR,OAAO,IAAK;UACX,oBACA;YAAA,uBACE;cAAA,UAAKA,OAAO,CAACC;YAAI;cAAA;cAAA;cAAA;YAAA;UAAM,GADfD,OAAO,CAACS,EAAE;YAAA;YAAA;YAAA;UAAA,QAEZ;QAEV,CAAC,CACD;MAAA;QAAA;QAAA;QAAA;MAAA;IAGI;MAAA;MAAA;MAAA;IAAA,QAEF;EAEV;AAEF;AAEA,eAAexB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}