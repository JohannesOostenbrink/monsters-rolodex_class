{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Johannes\\\\Desktop\\\\Front End Development\\\\monsters_rolodex\\\\src\\\\App.js\";\nimport './App.css';\nimport { Component } from 'react';\nimport CardList from './Components/Card_list/card_list_comp';\nimport Search from './Components/Search_box/search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    // constructor runs first - in anything and in any class\n    super(); // constructor here initializes the state \n    this.onSearchChange = event => {\n      // keep this out of render so we can reference this anywhere when rendering \n      const searchField = event.target.value.toLocaleLowerCase();\n      this.setState(() => ({\n        searchField\n      }));\n    };\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n  componentDidMount() {\n    // This run 3rd - Updates the state and then render re-renders\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState(() => {\n      return {\n        monsters: users\n      };\n    }));\n  }\n  render() {\n    // Renders run second. It mounts initial UI on to the DOM  \n\n    const {\n      monsters,\n      searchField\n    } = this.state; // for optimization\n    const {\n      onSearchChange\n    } = this; // for optimization\n\n    const filteredMonsters = monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    }); // new variable filteredMonsters inside the render function. It is not being returned from the function\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"AppTitle\",\n        children: \"Monsters Rolodex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        onChangeHandler: onSearchChange,\n        placeholder: \"search monsters\",\n        className: \"monsters_searchbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        monsters: filteredMonsters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","CardList","Search","App","constructor","onSearchChange","event","searchField","target","value","toLocaleLowerCase","setState","state","monsters","componentDidMount","fetch","then","response","json","users","render","filteredMonsters","filter","monster","name","includes"],"sources":["C:/Users/Johannes/Desktop/Front End Development/monsters_rolodex/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport {Component} from 'react';\nimport CardList from './Components/Card_list/card_list_comp'\nimport Search from './Components/Search_box/search'\n\n\nclass App extends Component {\n  constructor(){ // constructor runs first - in anything and in any class\n    super();     // constructor here initializes the state \n\n    this.state={\n      monsters:[],\n      searchField: '',\n\n  };\n}\n\ncomponentDidMount() { // This run 3rd - Updates the state and then render re-renders\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then((response) => response.json())\n    .then((users) => this.setState(() =>\n   { return {monsters:users};\n}))\n}\n\nonSearchChange = (event) => { // keep this out of render so we can reference this anywhere when rendering \n  const searchField = event.target.value.toLocaleLowerCase();\n  this.setState(\n    () => ({ searchField }))\n};\n\n  render(){ // Renders run second. It mounts initial UI on to the DOM  \n    \n    const { monsters, searchField} = this.state; // for optimization\n    const {onSearchChange} = this; // for optimization\n\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n     }); // new variable filteredMonsters inside the render function. It is not being returned from the function\n\n    return (\n      <div className=\"App\">\n\n        <h1 className = \"AppTitle\" >Monsters Rolodex</h1>\n\n         <Search \n         onChangeHandler = {onSearchChange}\n         placeholder = 'search monsters'\n         className = 'monsters_searchbox' />\n\n         <CardList monsters = {filteredMonsters} />\n\n    \n       \n      </div>\n    )\n  }\n \n}\n\nexport default App;\n"],"mappings":";AACA,OAAO,WAAW;AAClB,SAAQA,SAAS,QAAO,OAAO;AAC/B,OAAOC,QAAQ,MAAM,uCAAuC;AAC5D,OAAOC,MAAM,MAAM,gCAAgC;AAAA;AAGnD,MAAMC,GAAG,SAASH,SAAS,CAAC;EAC1BI,WAAW,GAAE;IAAE;IACb,KAAK,EAAE,CAAC,CAAK;IAAA,KAiBjBC,cAAc,GAAIC,KAAK,IAAK;MAAE;MAC5B,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,iBAAiB,EAAE;MAC1D,IAAI,CAACC,QAAQ,CACX,OAAO;QAAEJ;MAAY,CAAC,CAAC,CAAC;IAC5B,CAAC;IAnBG,IAAI,CAACK,KAAK,GAAC;MACTC,QAAQ,EAAC,EAAE;MACXN,WAAW,EAAE;IAEjB,CAAC;EACH;EAEAO,iBAAiB,GAAG;IAAE;IACpBC,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAK,IAAI,CAACR,QAAQ,CAAC,MAChC;MAAE,OAAO;QAACE,QAAQ,EAACM;MAAK,CAAC;IAC5B,CAAC,CAAC,CAAC;EACH;EAQEC,MAAM,GAAE;IAAE;;IAER,MAAM;MAAEP,QAAQ;MAAEN;IAAW,CAAC,GAAG,IAAI,CAACK,KAAK,CAAC,CAAC;IAC7C,MAAM;MAACP;IAAc,CAAC,GAAG,IAAI,CAAC,CAAC;;IAE/B,MAAMgB,gBAAgB,GAAGR,QAAQ,CAACS,MAAM,CAAEC,OAAO,IAAK;MACpD,OAAOA,OAAO,CAACC,IAAI,CAACd,iBAAiB,EAAE,CAACe,QAAQ,CAAClB,WAAW,CAAC;IAC9D,CAAC,CAAC,CAAC,CAAC;;IAEL,oBACE;MAAK,SAAS,EAAC,KAAK;MAAA,wBAElB;QAAI,SAAS,EAAG,UAAU;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB,eAEhD,QAAC,MAAM;QACP,eAAe,EAAIF,cAAe;QAClC,WAAW,EAAG,iBAAiB;QAC/B,SAAS,EAAG;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAG,eAEnC,QAAC,QAAQ;QAAC,QAAQ,EAAIgB;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAIvC;EAEV;AAEF;AAEA,eAAelB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}